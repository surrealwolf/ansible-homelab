---
# Tasks file for Netdata

- name: Download the installation script
  ansible.builtin.get_url:
    url: https://my-netdata.io/kickstart.sh
    dest: /tmp/kickstart.sh
    mode: +x

- name: Install Netdata
  ansible.builtin.command: /tmp/kickstart.sh --dont-wait --auto-update --stable-channel

- name: Cleanup installation script
  ansible.builtin.file:
    path: /tmp/kickstart.sh
    state: absent

- name: Create Netdata config path
  ansible.builtin.file:
    path: /etc/netdata
    state: directory

- name: Netdata config template
  ansible.builtin.template:
    src: ../templates/netdata.conf.j2
    dest: /etc/netdata/netdata.conf
    owner: root
    group: root
    mode: u=wrx,g=rx,o=r,+x
  notify: Restart Netdata

- name: Claim to Netdata Cloud
  block:
    - name: Claim to Netdata Cloud if not already
      ansible.builtin.shell:
        cmd: netdata-claim.sh -token={{ claim_token }} -rooms={{ claim_rooms }} -url={{ claim_url }}
        creates: /var/lib/netdata/cloud.d/claimed_id
  when: reclaim == false

- name: Re-claim a node to Netdata Cloud
  block:
    - name: Ensure `uuidgen` is installed
      ansible.builtin.stat:
        path: /usr/bin/uuidgen
      register: uuidgen_result

    - name: Fail if `uuidgen` is not installed
      ansible.builtin.fail:
        msg: The system needs `uuidgen` installed to enable re-claiming.
      when: uuidgen_result.stat.exists == false

    - name: Reclaim the node with `-id=`
      ansible.builtin.shell: netdata-claim.sh -token={{ claim_token }} -rooms={{ claim_rooms }} -url={{ claim_url }} -id=$(uuidgen)
      when: uuidgen_result.stat.exists == true
      notify: Restart Netdata
  when: reclaim == true
